1. git --version : this will check the version of the git in your system

2. before using git software we should give our name and email to the git so if the any users watch our repos they will know who wrote the code and the owner

 ---> git config --global user.name <name> :
	        This cmd will set the user name of owner
 ---> git config --global user.email <email> :
		This cmd will set the email of owner 

3. to check if the name and email are created or not use :
	--> git config --global user.name
	--> git config --global user.email

4. Press {code .} command to open VScode in your system at that file


Q) how to get a repository to work in our system?

A) there are two ways to get a repository to work with
	1. initializing a git repo :
		you have to start a new repo
	2. clowning a git repo :
		an existing repo from the server will be enter your system



Initializing a git repo
------------------------

cmd : git init --> To initialize a git

now enter {ls -lart} command to check there are any folder named {.git}
usually it is a hidden folder so if it is created then,
git will be succesfully created.

Note : ls -lart --> used to show the hidden files and normal files in the folder


Git status
-------------
this command will check the status of files present in the git repository

there are 4types in here
1. UnTracked :  what ever the changes happen to the file git will not track any details of that file.

2. Staged : the files which are staged will only go to the commit.

3. Commit : commit is a snapshot of files which are tracked by the git.

4. Modified :   if the file which is commited is modified then it will show message <Modified : filename> . after this we need to add and commit the file agian to track the new data by git.


STAGING
----------------

to stage a file from untracked or modified state then we use

		example --> git add index.html

add : this command is used to stage the specified file so that can move to commit satge.


NOTE : status = looking red colour >> stage the file
       status = looking green colour >> file is already staged. commit the file.

	if want to all file in the local file to git then write
		example --> git add -A
			--> git add --all
	bot can add all the files in the staging.




GIT CHECKOUT
--------------------

definition : git checkout command is used to enter the past commmited file into the text editor if any thing happens to the file.

example : i saved a file named gitbasics.txt and some one cleared all the data and saved that if you want to restore that file data. we use git checkout to enter the data which has been commited by you before.

command : git checkout <filename> --> to retrive data of 1 file.
	  git checkout -f --> to retrive data of all the files i git directory.


GIT LOG
--------------

git log is used check the commits that are done by the branch user. It will record all the changes that are commited by the user along with username and email.

command :
	git log --> shows all the commits done by the user
	git log -p -1 --> shows the recent commits.
		   -1,-2,-3 this will show no of commits that you want to see.




GIT DIFF
-------------
definition : git diff command is used to comapare modified file with staged file to check what new changes have done to that file. 

	--> if modified file is same as staged file then it shows nothing.
	--> we can also compare the staged file with previous commited file.


Command : git diff --> comapare(modified,staged).
	: git diff --staged -> compare(staged,commited).

if the changes that are done in the staging is not good then we can use [git checkout <filename>] to undo the changes and rewrite the previous file.



 

























